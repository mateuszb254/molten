# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    project_name: '%env(PROJECT_NAME)%'

    #Recaptcha config
    repcatcha.public_key: '%env(RECAPTCHA_PUBLIC_KEY)%'
    recaptcha.secret_key: '%env(RECAPTCHA_SECRET_KEY)%'
    recaptcha.api_url: 'https://www.google.com/recaptcha/api/siteverify'

    #MaintenanceManager config
    maintenance_path: '%kernel.project_dir%/config/maintenance.yaml'

    #TermsManager config
    terms_path: '%kernel.project_dir%/var/terms.html'

    #PayPal config
    paypal:
        public_key: '%env(PAYPAL_PUBLIC_KEY)%'
        secret_key: '%env(PAYPAL_SECRET_KEY)%'
        payment_method: 'paypal'
        mode: 'sandbox'
        currency: 'PLN'

        payment_success_route_name: 'payments_paypal_receive'
        payment_cancel_route_name: 'payments_paypal_index'

    #MailerService config
    mailer:
        from_email: '%env(MAILER_FROM_EMAIL)%'
        from_name: '%env(MAILER_FROM_NAME)%'
        content_type: 'text/html'
        charset: 'utf-8'

    #KingdomTwigExtension config
    kingdom_extension_settings:
        path: '/images/kingdom'
        shinsoo: 'shinsoo'
        chunjo: 'chunjo'
        jinno: 'jinno'
        format: 'png'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # App\Service
    App\Service\Payments\PayPal\PayPalInitiator:
          arguments:
              $config: '%paypal%'

    App\Service\Recaptcha:
        arguments:
            $secretKey: '%recaptcha.secret_key%'
            $publicKey: '%repcatcha.public_key%'
            $apiUrl: '%recaptcha.api_url%'

    App\Service\MaintenanceManager:
        arguments:
            $configPath: '%maintenance_path%'

    App\Service\Mailer:
        arguments:
            $options: '%mailer%'

    App\Service\TermsManager:
        arguments:
            $termsPath: '%terms_path%'

    # App\Twig
    App\Twig\KingdomExtension:
        arguments:
            $config: '%kingdom_extension_settings%'

    # App\EventSubscriber
    App\EventSubscriber\LocaleSubscriber:
        arguments:
            $defaultLocale: '%kernel.default_locale%'